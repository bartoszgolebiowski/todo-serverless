service: aws-nodejs-todo
plugins:
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation
  - serverless-deployment-bucket
  - serverless-iam-roles-per-function
  - serverless-aws-alias
  - serverless-dynamodb-local
  - serverless-offline
provider:
  name: aws
  runtime: nodejs10.x
  stage: test
  region: eu-central-1
  stackName: todo-bartosz-golebiowski-stack
  apiName: todo-bartosz-golebiowski-api
  deploymentBucket:
    name: todo-bartosz-golebiowski-bucket
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
      Resource: "*"

  environment:
    TODO_TABLE: 'todoTable'

custom:
  dynamodb:
    stages:
      - test
  models:
    - name: createOrderRequest
      contentType: "application/json"
      schema:
        required:
          - name
        properties:
           name:
            type: string

functions:
  createTodo:
    handler: src/todo/todoController.createTodo
    name: createTodo
    events:
      - http:
          documentation:
            summary: "Create new todo"
            description: "Creates new todo"
            requestModels:
              "application/json": createOrderRequest
          path: todo
          method: post
          reqValidatorName: onlyBody

resources:
  Resources:
    todoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TODO_TABLE}
        AttributeDefinitions:
          - AttributeName: todo_id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: todo_id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1



    onlyBody:
      Type: "AWS::ApiGateway::RequestValidator"
      Properties:
        Name: 'only-body'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
